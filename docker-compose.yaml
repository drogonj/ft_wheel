services:
  backend:
    container_name: backend
    build: backend
    networks:
      - pg-network
    volumes:
      - jackpots-logs:/var/log/ft_wheel
      - wheels-configs:/backend/django/data/wheel_configs
    environment:
      - DEBUG=${DEBUG}
      - HOSTNAME=${HOSTNAME}
      - HTTPS=${HTTPS}
      - ASK_CONSENT=${ASK_CONSENT}
    secrets:
      - django_secret
      - oauth_uid
      - oauth_secret
      - oauth_redirect_uri
      - postgres_db
      - postgres_password
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8000:8000
    restart: unless-stopped

  postgres:
    container_name: postgres
    build: postgres
    secrets:
      - postgres_password
      - postgres_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - pg-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 2s
      timeout: 5s
      retries: 20
    user: postgres
    restart: unless-stopped

    
networks:
  pg-network:
    driver: bridge

volumes:
  postgres-data:
  jackpots-logs:
  wheels-configs:

secrets:
  # Postgres
  postgres_password:
    file: ./secrets/postgres_password
  postgres_db:
    file: ./secrets/postgres_db
  # Backend
  django_secret:
    file: ./secrets/django_secret
  oauth_uid:
    file: ./secrets/oauth_uid
  oauth_secret:
    file: ./secrets/oauth_secret
  oauth_redirect_uri:
    file: ./secrets/oauth_redirect_uri
